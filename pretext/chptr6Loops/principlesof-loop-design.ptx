<section xml:id="principlesof-loop-design">
  <title>Principles of Loop Design</title>
  <p>
    Before moving on, it will be useful to summarize the main principles
        <idx><h>loop design principles</h></idx>
    involved in correctly constructing a loop.
    <ul>
      <li>
        <p>
          A <em>counting
            <idx><h>counting loop</h></idx>
          loop</em> can be used whenever you know in advance exactly how many iterations are needed.
          Java's <em>for statement</em> is an appropriate structure for coding a counting loop.
        </p>
      </li>
      <li>
        <p>
          A <em>while structure</em>
            <idx><h>while structure</h></idx>
          should be used when the problem suggests that the loop body may be skipped entirely.
          Java's <em>while statement</em>
          is specially designed for the while structure.
        </p>
      </li>
      <li>
        <p>
          A <em>do-while structure</em>
            <idx><h>do-while structure</h></idx>
          should be used only when a loop requires one or more iterations.
          Java's <em>do-while statement</em>
          is specially designed for the do-while structure.
        </p>
      </li>
      <li>
        <p>
          The <em>loop variable</em> is used to specify the
          <em>loop-entry condition</em>.
          It must be initialized to an appropriate initial value,
          and it must be updated on each iteration of the loop.
        </p>
      </li>
      <li>
        <p>
          A loop's <em>bound
            <idx><h>bound</h></idx>
          </em> may be a <em>count</em>,
          a <em>sentinel</em>, or, more generally,
          a <em>conditional bound</em>.
          It must be correctly specified in the loop-entry expression,
          and progress toward the bound must be made in the <em>updater</em>.
        </p>
      </li>
      <li>
        <p>
          An <em>infinite
            <idx><h>infinite loop</h></idx>
          loop</em> may result if the initializer,
          loop-entry expression, or updater expression is not correctly specified.
        </p>
      </li>
    </ul>
  </p>
  <p>
    The loop types are also summarized in Table<nbsp/>6.1.
  </p>
  <table>
    \TBT{0pc}{A summary of the design decisions required when coding a loop}
    
    <tabular>
      <row>
        <cell><c>__________</c></cell>
      </row>
      <row>
        <cell>{Use}</cell>
        <cell>{If}</cell>
        <cell>{Java Statement}</cell>
      </row>
      <row>
        <cell><c>__________</c></cell>
      </row>
      <row>
        <cell><em>Counting loop</em></cell>
        <cell><em>Number of iterations known in advance</em></cell>
        <cell><em>for</em></cell>
      </row>
      <row>
        <cell><c>__________</c></cell>
      </row>
      <row>
        <cell><em>While structure</em></cell>
        <cell><em>Number of iterations not known</em></cell>
        <cell><em>while</em>    \cr</cell>
        <cell><em>Loop may not be entered at all</em></cell>
        <cell></cell>
      </row>
      <row>
        <cell><c>__________</c></cell>
      </row>
      <row>
        <cell><em>Do-while structure</em></cell>
        <cell><em>Number of iterations not known</em></cell>
        <cell><em>do-while</em> \cr</cell>
        <cell><em>Loop must be entered at least once</em></cell>
        <cell></cell>
      </row>
      <row>
        <cell><c>__________</c></cell>
      </row>
    </tabular>
    \endTB
  </table>
  <p>
    \secEXRHone{Self-Study Exercise}
    <ol>
      <li>
        <p>
          For each of the following problems,
          decide whether a counting loop structure,
          a <c>while</c> structure,
          or a <c>do-while</c> structure should be used,
          and write a pseudocode algorithm.
          <ul>
            <li>
              <p>
                Print the names of all visitors to your Web site.
              </p>
            </li>
            <li>
              <p>
                Validate that a number input by the user is positive.
              </p>
            </li>
            <li>
              <p>
                Change all the backslashes (<m>\backslash</m>) in a Windows Web page address to the slashes (/) used in a Unix Web page address.
              </p>
            </li>
            <li>
              <p>
                Find the car with the best miles-per-gallon ratio among the cars in the
                <em>Consumer Reports</em> database.
              </p>
            </li>
          </ul>
        </p>
      </li>
    </ol>
  </p>
</section>