<section xml:id="introduction20">
  <title>Introduction</title>
  <p>
    You have already had an introduction to <c>String</c> s in the early chapters of this text.
    In Chapter<nbsp/>2, we introduced the <c>String</c> data type and showed how to create <c>String</c> objects and use <c>String</c> methods,
    such as <c>length()</c>, <c>concat()</c>, and <c>equals()</c>.
  </p>
  <p>
    We have seen <c>String</c> s used for GUI I/O operations when used <c>String</c> s as the contents of <c>JTextField</c> s and other text components,
    as the values of <c>JLabel</c> s, as the labels for <c>JButton</c> s, and so on. <c>String</c> s are also used extensively in command-line interfaces.
  </p>
  <p>
    Another important task that <c>String</c> s are used for are as a standard way of presenting or displaying information about objects.
    As we saw in Chapter<nbsp/>2,
    one of the key conventions of the Java class hierarchy is that every class inherits the <c>Object.toString()</c> method,
    which can be used to provide a string representation of any object.
    For example, \mbox{Integer.toString()} converts an <c>int</c> to a <c>String</c>, so that it can be used in <c>JTextField</c> s or
<c>JLabel</c> s.
  </p>
  <p>
    Programmers often have to work with strings.
    Think of some of the tasks performed by a typical word processor,
    such as cut, paste, copy, and insert.
    When you cut and paste text from one part of the document to another,
    the program has to move one string of text, the cut,
    from one location in the document and insert it in another.
  </p>
  <p>
    Strings are also important because they are our first look at a
    <em>data structure</em>.
    A <term>data structure</term>
        <idx><h>data structure</h></idx>
    is a collection of data that is organized (structured) in some way.
    A <em>string</em> is a collection of character (<c>char</c>) data.
    Strings are important data structures in a programming language,
    and they are used to represent a wide variety of data.
  </p>
  <p>
    The main purpose of this chapter is to provide a detailed discussion of Java's string-related classes,
    including the <c>String</c>, <c>StringBuffer</c>, and <c>StringTokenizer</c> classes.
    These are the important classes for writing string-processing applications.
    Our goal is to introduce the <image width="73%" source="chptr07/stringclass.png"/> important <c>String</c> methods and illustrate common string-processing algorithms.
    We will review how to create strings from scratch and from other data types.
    We will learn how to find characters and substrings inside bigger strings.
    We will learn how to take strings apart and how to rearrange their parts.
    Finally, we will learn how to apply these string-processing skills in a program that plays the game of Hang Man.
  </p>
</section>