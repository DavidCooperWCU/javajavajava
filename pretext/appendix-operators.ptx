<appendix xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Operator Precedence Hierarchy</title>
  <p>
    <xref ref="tab-ops">Table</xref> summarizes the precedence and 
    associativity relationships for all Java operators.
    Within a single expression,
    an operator of order <em>m</em>
    would be evaluated before an operator of order
    <em>n</em> if <m>m \lt n</m>.
    Operators having the same order are evaluated according to their association order.
  </p>
  <p>
    Most operators associate from left to right,
    but note that assignment operators associate from right to left.
    For example, consider the following code segment:
  </p>

  <table xml:id="tab-ops">
    <title>Java operator precedence and associativity table.</title>
    <tabular>
      <row bottom="minor" left="minor">
        <cell>Order</cell>
        <cell>Operator</cell>
        <cell>Operation</cell>
        <cell>Association</cell>
      </row>
      <row>
        <cell>0</cell>
        <cell>
          <c>(  )</c>
        </cell>
        <cell>
          <em>Parentheses</em>
        </cell>
        <cell><c> </c></cell>
        </row>
        <row>
        <cell>1</cell>
        <cell> <c>++ -- </c></cell>
        <cell><em>Postincrement, postdecrement</em></cell>
        <cell> L to R</cell>
        </row>
         <row>
        <cell>1</cell>
        <cell> <c>.</c></cell>
        <cell><em>dot operator</em></cell>
        <cell> L to R</cell>
        </row>
        <row>
        <cell>2</cell>
        <cell> <c>++ -- </c></cell>
        <cell><em>Preincrement, predecrement</em></cell>
        <cell> R to L</cell>
        </row>
         <row>
        <cell>2</cell>
        <cell> <c>+ -</c></cell>
        <cell><em>unary plus, unary minus</em></cell>
        <cell> R to L</cell>
        </row>
        <row>
         <cell>2</cell>
        <cell> <c> ! </c></cell>
        <cell><em>Boolean NOT</em></cell>
        <cell> R to L</cell>
        </row>
        <row>
        <cell>3</cell>
        <cell> <c>(type) new</c></cell>
        <cell><em>Type cast, object instantiation</em></cell>
        <cell> R to L</cell>
        </row>
        <row>
        <cell>4</cell>
        <cell><c>*  /  %</c></cell>
        <cell><em>Multiplication, division, modulus</em></cell>
        <cell> L to R</cell>
        </row>
        <row>
        <cell>5</cell>
        <cell> <c>+  -</c></cell>
        <cell><em>Addition, subtraction</em></cell>
        <cell> L to R</cell>
        </row>
        <row>
        <cell>5</cell>
        <cell> <c>+</c></cell>
        <cell><em>String concatenation</em></cell>
        <cell> L to R</cell>
        </row>
        <row>
        <cell>6</cell>
        <cell> <c>&lt;  &gt;  &lt;=  &gt;=</c></cell>
        <cell><em>Relational operators</em></cell>
        <cell> L to R</cell>
        </row>
        <row>
        <cell>7</cell>
        <cell> <c>==   !=</c></cell>
        <cell><em>Equality operators</em></cell>
        <cell> L to R</cell>
        </row>
        <row>
        <cell>8</cell>
        <cell> <c>^</c></cell>
        <cell><em>Boolean XOR</em></cell>
        <cell> L to R</cell>
        </row>
        <row>
        <cell>9</cell>
        <cell> <c>&amp;&amp;</c></cell>
        <cell><em>Boolean AND</em></cell>
        <cell> L to R</cell>
        </row>
        <row>
        <cell>10</cell>
        <cell> <c>||</c></cell>
        <cell><em>Boolean OR</em></cell>
        <cell> L to R</cell>
        </row>
        <row bottom="minor">
        <cell>11</cell>
        <cell> <c>= += -= *= /= %=</c></cell>
        <cell><em>assignment operators</em></cell>
        <cell> R to L</cell>
        </row>
     </tabular>
     </table>

</appendix>